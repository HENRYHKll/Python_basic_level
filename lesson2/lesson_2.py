import math
infinity = math.inf
#1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
# элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.
lst = [infinity, 1, 'Per aspera ad astra', (11, 'null')]
for lst_i in lst:
    print(f'Элемент списка {lst_i}, его тип {type(lst_i)} ')

#2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1,
# 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов
# необходимо использовать функцию input().
lst_2 = input(f'Ввод через пробел: ').split()
for lst_i_2 in range(0, len(lst_2) - 1, 2):
    lst_2[lst_i_2], lst_2[lst_i_2+1] = lst_2[lst_i_2+1], lst_2[lst_i_2]
print(lst_2)

#3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.
months_season = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето', 7: 'лето', 8: 'лето', 9: 'осень',
          10: 'осень', 11: 'осень', 12: 'зима'}
months_list = ['зима', 'зима', 'весна', 'весна', 'весна', 'лето', 'лето', 'лето', 'осень', 'осень', 'осень', 'зима']
months_num = input(f'Номер месяц: ')
#emu = 1
#while True: #do while жаль что нет в питоне
#    months_num = input(f'Введите номер месяц целым числом: ')
#    if type(emu) == type(months_num):
#        break
months_num = int(months_num)
print(f'Через словарь это - {months_season[months_num]}, через список - {months_list[months_num - 1]}')

#4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
words_lib = input(f'Вводите строку из нескольких слов через пробел:').split()
for words_i, words_one in enumerate(words_lib):
    print(f'{words_i}: {words_one[:10]}') # мне кажеться тут что то не так

#5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
my_list = [7, 5, 3, 3, 2]

while True:
    rating_num = input(f'Введите рейтинг (чтобы выйти введите - :q ):')
    if rating_num == ':q':
        break
    rating_num = int(rating_num)
    for rating_i in range(1, len(my_list)):
        if rating_num >= max(my_list):
            my_list.insert(0, rating_num)
            break
        elif rating_num <= min(my_list):
            my_list.append(rating_num)
            break
        elif my_list[rating_i - 1] >= rating_num >= my_list[rating_i]:
            my_list.insert(rating_i, rating_num)
            break
    print(my_list)

#6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер
# товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#Пример готовой структуры:
#[
#(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#]
#Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
#Пример:
#{
#“название”: [“компьютер”, “принтер”, “сканер”],
#“цена”: [20000, 6000, 2000],
#“количество”: [5, 2, 7],
#“ед”: [“шт.”]
#}
print(f'###############Склад################')
shop_products = [
    (1, {'название': 'компьютер', 'цена': 20000, 'количество': 5, 'eд': 'шт.'}),
    (2, {'название': 'принтер', 'цена': 6000, 'количество': 2, 'eд': 'шт.'}),
    (3, {'название': 'сканер', 'цена': 2000, 'количество': 7, 'eд': 'шт.'})]
#неуспел вообще